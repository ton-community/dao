;;
;; Members storage
;; NOTE: this storage have to store ONLY voting shares, do not add anything else here
;;       since it is copied during proposal creation
;;

int load_shares(cell dict, int member) {
    var (cs, found) = dict.udict_get?(256, member);
    int coins = 0;
    if (found) {
        slice cs2 = cs;
        cell rf = cs2~load_ref();
        cs2.end_parse();

        cs2 = rf.begin_parse();
        coins = cs2~load_coins();
        cs2.end_parse();
    }
    return coins;
}

cell store_shares(cell dict, int member, int shares) {
    if (shares > 0) {
        var data = begin_cell()
            .store_ref(begin_cell()
                .store_coins(shares)
            .end_cell());
        return udict_set_builder(dict, 256, member, data);
    } else {
        var (changed, _) = udict_delete?(dict, 256, member);
        return changed;
    }
}